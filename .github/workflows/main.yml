name: Upload Frontend to S3

on:
  push:
    branches:
    - main

  workflow_dispatch:
    inputs:
      aws_region:
        description: 'AWS Region to Deploy to'
        required: true 
        type: string
      aws_arn:
        description: 'AWS Role ARN to Assume'
        required: true 
        type: string
      aws_bucket:
        description: 'AWS S3 Bucket'
        required: true 
        type: string
      aws_distribution:
        description: 'AWS Cloudfront Distribution ID'
        required: true 
        type: string

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Hide Secrets on Workflow Dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: |
        aws_region=$(jq -r '.inputs.aws_region' $GITHUB_EVENT_PATH)
        echo "::add-mask::$aws_region"
        aws_arn=$(jq -r '.inputs.aws_arn' $GITHUB_EVENT_PATH)
        echo "::add-mask::$aws_arn"
        aws_bucket=$(jq -r '.inputs.aws_bucket' $GITHUB_EVENT_PATH)
        echo "::add-mask::$aws_bucket"
        aws_distribution=$(jq -r '.inputs.aws_distribution' $GITHUB_EVENT_PATH)
        echo "::add-mask::$aws_distribution"

    - name: Configure AWS Credentials on Workflow Dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ github.event.inputs.aws_arn }}
        aws-region: ${{ github.event.inputs.aws_region }}

    - name: Configure AWS Credentials on Push
      if: ${{ github.event_name != 'workflow_dispatch' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Get Changed Files on Push
      if: ${{ github.event_name != 'workflow_dispatch' }}
      run: |
        echo 'CHANGED_FILES<<EOF' >> $GITHUB_ENV
        git diff --name-only ${{ github.event.before }}..${{ github.event.after }} >> $GITHUB_ENV
        echo 'EOF' >> $GITHUB_ENV

    - name: Deploy to S3 Bucket from Workflow Dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: aws s3 sync . s3://${{ github.event.inputs.aws_bucket }} --exclude '.git/*' --exclude '.github/*' --exclude '*.md' --delete

    - name: Deploy to S3 Bucket on Push
      if: ${{ github.event_name != 'workflow_dispatch' }}
      run: aws s3 sync . s3://${{ secrets.S3_BUCKET }} --exclude '.git/*' --exclude '.github/*' --exclude '*.md' --delete

    - name: Invalidate Cloudfront Cache from Workflow Dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      run: aws cloudfront create-invalidation --distribution-id ${{ github.event.inputs.aws_distribution }} --paths "/*" > /dev/null 2>&1

    - name: Invalidate Cloudfront Cache on Push
      if: ${{ github.event_name != 'workflow_dispatch' }}
      run: |
        for file in $CHANGED_FILES; do
          if [[ $file != .git* ]] && [[ $file != *.md ]]; then
            aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/$file" > /dev/null 2>&1
          fi
        done